# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-24 00:10
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminAssert',
            fields=[
                ('assert_id', models.IntegerField(primary_key=True, serialize=False)),
                ('assert_type', models.CharField(blank=True, max_length=20, null=True)),
                ('assert_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'admin_assert',
            },
        ),
        migrations.CreateModel(
            name='AdminnotificationInbox',
            fields=[
                ('notification_id', models.IntegerField(primary_key=True, serialize=False)),
                ('severity', models.SmallIntegerField()),
                ('date_added', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('is_read', models.SmallIntegerField()),
                ('is_remove', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'adminnotification_inbox',
            },
        ),
        migrations.CreateModel(
            name='AdminRole',
            fields=[
                ('role_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('tree_level', models.SmallIntegerField()),
                ('sort_order', models.SmallIntegerField()),
                ('role_type', models.CharField(max_length=1)),
                ('user_id', models.IntegerField()),
                ('role_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'admin_role',
            },
        ),
        migrations.CreateModel(
            name='AdminRule',
            fields=[
                ('rule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('resource_id', models.CharField(blank=True, max_length=255, null=True)),
                ('privileges', models.CharField(blank=True, max_length=20, null=True)),
                ('assert_id', models.IntegerField()),
                ('role_type', models.CharField(blank=True, max_length=1, null=True)),
                ('permission', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'admin_rule',
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=32, null=True)),
                ('lastname', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('username', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('logdate', models.DateTimeField(blank=True, null=True)),
                ('lognum', models.SmallIntegerField()),
                ('reload_acl_flag', models.SmallIntegerField()),
                ('is_active', models.SmallIntegerField()),
                ('extra', models.TextField(blank=True, null=True)),
                ('rp_token', models.TextField(blank=True, null=True)),
                ('rp_token_created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'admin_user',
            },
        ),
        migrations.CreateModel(
            name='Api2AclAttribute',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_type', models.CharField(max_length=20)),
                ('resource_id', models.CharField(max_length=255)),
                ('operation', models.CharField(max_length=20)),
                ('allowed_attributes', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'api2_acl_attribute',
            },
        ),
        migrations.CreateModel(
            name='Api2AclRole',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('role_name', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'api2_acl_role',
            },
        ),
        migrations.CreateModel(
            name='Api2AclRule',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('resource_id', models.CharField(max_length=255)),
                ('privilege', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'api2_acl_rule',
            },
        ),
        migrations.CreateModel(
            name='Api2AclUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.IntegerField(unique=True)),
                ('role_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'api2_acl_user',
            },
        ),
        migrations.CreateModel(
            name='ApiAssert',
            fields=[
                ('assert_id', models.IntegerField(primary_key=True, serialize=False)),
                ('assert_type', models.CharField(blank=True, max_length=20, null=True)),
                ('assert_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'api_assert',
            },
        ),
        migrations.CreateModel(
            name='ApiRole',
            fields=[
                ('role_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('tree_level', models.SmallIntegerField()),
                ('sort_order', models.SmallIntegerField()),
                ('role_type', models.CharField(max_length=1)),
                ('user_id', models.IntegerField()),
                ('role_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'api_role',
            },
        ),
        migrations.CreateModel(
            name='ApiRule',
            fields=[
                ('rule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('resource_id', models.CharField(blank=True, max_length=255, null=True)),
                ('api_privileges', models.CharField(blank=True, max_length=20, null=True)),
                ('assert_id', models.IntegerField()),
                ('role_type', models.CharField(blank=True, max_length=1, null=True)),
                ('api_permission', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'api_rule',
            },
        ),
        migrations.CreateModel(
            name='ApiSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('logdate', models.DateTimeField()),
                ('sessid', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'api_session',
            },
        ),
        migrations.CreateModel(
            name='ApiUser',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=32, null=True)),
                ('lastname', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.CharField(blank=True, max_length=128, null=True)),
                ('username', models.CharField(blank=True, max_length=40, null=True)),
                ('api_key', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('lognum', models.SmallIntegerField()),
                ('reload_acl_flag', models.SmallIntegerField()),
                ('is_active', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'api_user',
            },
        ),
        migrations.CreateModel(
            name='CaptchaLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=32)),
                ('value', models.CharField(max_length=32)),
                ('count', models.IntegerField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'captcha_log',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryAncCategsIndexIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_anc_categs_index_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryAncCategsIndexTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_anc_categs_index_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryAncProductsIndexIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_anc_products_index_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryAncProductsIndexTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_anc_products_index_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryEntity',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_id', models.SmallIntegerField()),
                ('parent_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('path', models.CharField(max_length=255)),
                ('position', models.IntegerField()),
                ('level', models.IntegerField()),
                ('children_count', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_entity',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryEntityDatetime',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_entity_datetime',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryEntityDecimal',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_entity_decimal',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryEntityInt',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_entity_int',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryEntityText',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_entity_text',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryEntityVarchar',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_entity_varchar',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryFlatStore1',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('path', models.CharField(max_length=255)),
                ('position', models.IntegerField()),
                ('level', models.IntegerField()),
                ('children_count', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('all_children', models.TextField(blank=True, null=True)),
                ('available_sort_by', models.TextField(blank=True, null=True)),
                ('children', models.TextField(blank=True, null=True)),
                ('custom_apply_to_products', models.IntegerField(blank=True, null=True)),
                ('custom_design', models.CharField(blank=True, max_length=255, null=True)),
                ('custom_design_from', models.DateTimeField(blank=True, null=True)),
                ('custom_design_to', models.DateTimeField(blank=True, null=True)),
                ('custom_layout_update', models.TextField(blank=True, null=True)),
                ('custom_use_parent_settings', models.IntegerField(blank=True, null=True)),
                ('default_sort_by', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('display_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('filter_price_range', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('include_in_menu', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('is_anchor', models.IntegerField(blank=True, null=True)),
                ('landing_page', models.IntegerField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_keywords', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('page_layout', models.CharField(blank=True, max_length=255, null=True)),
                ('path_in_store', models.TextField(blank=True, null=True)),
                ('url_key', models.CharField(blank=True, max_length=255, null=True)),
                ('url_path', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_flat_store_1',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_product',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryProductIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField(blank=True, null=True)),
                ('is_parent', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('visibility', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_product_index',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryProductIndexEnblIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('visibility', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_product_index_enbl_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryProductIndexEnblTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('visibility', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_product_index_enbl_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryProductIndexIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField()),
                ('is_parent', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('visibility', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_product_index_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategoryProductIndexTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField()),
                ('is_parent', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('visibility', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_category_product_index_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogCompareItem',
            fields=[
                ('catalog_compare_item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('visitor_id', models.IntegerField()),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_compare_item',
            },
        ),
        migrations.CreateModel(
            name='CatalogEavAttribute',
            fields=[
                ('attribute_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('frontend_input_renderer', models.CharField(blank=True, max_length=255, null=True)),
                ('is_global', models.SmallIntegerField()),
                ('is_visible', models.SmallIntegerField()),
                ('is_searchable', models.SmallIntegerField()),
                ('is_filterable', models.SmallIntegerField()),
                ('is_comparable', models.SmallIntegerField()),
                ('is_visible_on_front', models.SmallIntegerField()),
                ('is_html_allowed_on_front', models.SmallIntegerField()),
                ('is_used_for_price_rules', models.SmallIntegerField()),
                ('is_filterable_in_search', models.SmallIntegerField()),
                ('used_in_product_listing', models.SmallIntegerField()),
                ('used_for_sort_by', models.SmallIntegerField()),
                ('is_configurable', models.SmallIntegerField()),
                ('apply_to', models.CharField(blank=True, max_length=255, null=True)),
                ('is_visible_in_advanced_search', models.SmallIntegerField()),
                ('position', models.IntegerField()),
                ('is_wysiwyg_enabled', models.SmallIntegerField()),
                ('is_used_for_promo_rules', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_eav_attribute',
            },
        ),
        migrations.CreateModel(
            name='CataloginventoryStock',
            fields=[
                ('stock_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('stock_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'cataloginventory_stock',
            },
        ),
        migrations.CreateModel(
            name='CataloginventoryStockItem',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('stock_id', models.SmallIntegerField()),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('min_qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('use_config_min_qty', models.SmallIntegerField()),
                ('is_qty_decimal', models.SmallIntegerField()),
                ('backorders', models.SmallIntegerField()),
                ('use_config_backorders', models.SmallIntegerField()),
                ('min_sale_qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('use_config_min_sale_qty', models.SmallIntegerField()),
                ('max_sale_qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('use_config_max_sale_qty', models.SmallIntegerField()),
                ('is_in_stock', models.SmallIntegerField()),
                ('low_stock_date', models.DateTimeField(blank=True, null=True)),
                ('notify_stock_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('use_config_notify_stock_qty', models.SmallIntegerField()),
                ('manage_stock', models.SmallIntegerField()),
                ('use_config_manage_stock', models.SmallIntegerField()),
                ('stock_status_changed_auto', models.SmallIntegerField()),
                ('use_config_qty_increments', models.SmallIntegerField()),
                ('qty_increments', models.DecimalField(decimal_places=4, max_digits=12)),
                ('use_config_enable_qty_inc', models.SmallIntegerField()),
                ('enable_qty_increments', models.SmallIntegerField()),
                ('is_decimal_divided', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cataloginventory_stock_item',
            },
        ),
        migrations.CreateModel(
            name='CataloginventoryStockStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('stock_id', models.SmallIntegerField()),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('stock_status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cataloginventory_stock_status',
            },
        ),
        migrations.CreateModel(
            name='CataloginventoryStockStatusIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('stock_id', models.SmallIntegerField()),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('stock_status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cataloginventory_stock_status_idx',
            },
        ),
        migrations.CreateModel(
            name='CataloginventoryStockStatusTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('stock_id', models.SmallIntegerField()),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('stock_status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cataloginventory_stock_status_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductBundleOption',
            fields=[
                ('option_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('required', models.SmallIntegerField()),
                ('position', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_bundle_option',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductBundleOptionValue',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_bundle_option_value',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductBundlePriceIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('max_price', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_bundle_price_index',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductBundleSelection',
            fields=[
                ('selection_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('parent_product_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('position', models.IntegerField()),
                ('is_default', models.SmallIntegerField()),
                ('selection_price_type', models.SmallIntegerField()),
                ('selection_price_value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('selection_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('selection_can_change_qty', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_bundle_selection',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductBundleSelectionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selection_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('selection_price_type', models.SmallIntegerField()),
                ('selection_price_value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_bundle_selection_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductBundleStockIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('stock_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('stock_status', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_bundle_stock_index',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEnabledIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('visibility', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_enabled_index',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntity',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_id', models.SmallIntegerField()),
                ('type_id', models.CharField(max_length=32)),
                ('sku', models.CharField(blank=True, max_length=64, null=True)),
                ('has_options', models.SmallIntegerField()),
                ('required_options', models.SmallIntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityDatetime',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_datetime',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityDecimal',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_decimal',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityGallery',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('position', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_gallery',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityGroupPrice',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_id', models.IntegerField()),
                ('all_groups', models.SmallIntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_group_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityInt',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_int',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityMediaGallery',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_media_gallery',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityMediaGalleryValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('disabled', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_media_gallery_value',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityText',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_text',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityTierPrice',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_id', models.IntegerField()),
                ('all_groups', models.SmallIntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_tier_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductEntityVarchar',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_entity_varchar',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductFlat1',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_set_id', models.SmallIntegerField()),
                ('type_id', models.CharField(max_length=32)),
                ('cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('gift_message_available', models.SmallIntegerField(blank=True, null=True)),
                ('has_options', models.SmallIntegerField()),
                ('image_label', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recurring', models.SmallIntegerField(blank=True, null=True)),
                ('links_exist', models.IntegerField(blank=True, null=True)),
                ('links_purchased_separately', models.IntegerField(blank=True, null=True)),
                ('links_title', models.CharField(blank=True, max_length=255, null=True)),
                ('msrp', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('msrp_display_actual_price_type', models.CharField(blank=True, max_length=255, null=True)),
                ('msrp_enabled', models.SmallIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('news_from_date', models.DateTimeField(blank=True, null=True)),
                ('news_to_date', models.DateTimeField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price_type', models.IntegerField(blank=True, null=True)),
                ('price_view', models.IntegerField(blank=True, null=True)),
                ('recurring_profile', models.TextField(blank=True, null=True)),
                ('required_options', models.SmallIntegerField()),
                ('shipment_type', models.IntegerField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=64, null=True)),
                ('sku_type', models.IntegerField(blank=True, null=True)),
                ('small_image', models.CharField(blank=True, max_length=255, null=True)),
                ('small_image_label', models.CharField(blank=True, max_length=255, null=True)),
                ('special_from_date', models.DateTimeField(blank=True, null=True)),
                ('special_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('special_to_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('tax_class_id', models.IntegerField(blank=True, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=255, null=True)),
                ('thumbnail_label', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('url_key', models.CharField(blank=True, max_length=255, null=True)),
                ('url_path', models.CharField(blank=True, max_length=255, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weight_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_flat_1',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexEav',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_eav',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexEavDecimal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_eav_decimal',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexEavDecimalIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_eav_decimal_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexEavDecimalTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_eav_decimal_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexEavIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_eav_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexEavTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_eav_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexGroupPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_group_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceBundleIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('price_type', models.SmallIntegerField()),
                ('special_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('orig_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tier', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_bundle_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceBundleOptIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('alt_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('alt_tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('alt_group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_bundle_opt_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceBundleOptTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('alt_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('alt_tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('alt_group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_bundle_opt_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceBundleSelIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('selection_id', models.IntegerField()),
                ('group_type', models.SmallIntegerField(blank=True, null=True)),
                ('is_required', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_bundle_sel_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceBundleSelTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('selection_id', models.IntegerField()),
                ('group_type', models.SmallIntegerField(blank=True, null=True)),
                ('is_required', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_bundle_sel_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceBundleTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('price_type', models.SmallIntegerField()),
                ('special_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('orig_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tier', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_bundle_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceCfgOptAgrIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField()),
                ('child_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_cfg_opt_agr_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceCfgOptAgrTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField()),
                ('child_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_cfg_opt_agr_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceCfgOptIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_cfg_opt_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceCfgOptTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_cfg_opt_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceDownlodIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('max_price', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_downlod_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceDownlodTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('max_price', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_downlod_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceFinalIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('orig_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tier', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_final_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceFinalTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('orig_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tier', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_final_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceOptAgrIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_opt_agr_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceOptAgrTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('option_id', models.IntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_opt_agr_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceOptIdx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_opt_idx',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceOptTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_opt_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexPriceTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('tax_class_id', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tier_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_price_tmp',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexTierPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('min_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_tier_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductIndexWebsite',
            fields=[
                ('website_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('website_date', models.DateField(blank=True, null=True)),
                ('rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_index_website',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductLink',
            fields=[
                ('link_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('linked_product_id', models.IntegerField()),
                ('link_type_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_link',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductLinkAttribute',
            fields=[
                ('product_link_attribute_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('link_type_id', models.SmallIntegerField()),
                ('product_link_attribute_code', models.CharField(blank=True, max_length=32, null=True)),
                ('data_type', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_link_attribute',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductLinkAttributeDecimal',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_link_attribute_id', models.SmallIntegerField(blank=True, null=True)),
                ('link_id', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_link_attribute_decimal',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductLinkAttributeInt',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_link_attribute_id', models.SmallIntegerField(blank=True, null=True)),
                ('link_id', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_link_attribute_int',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductLinkAttributeVarchar',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_link_attribute_id', models.SmallIntegerField()),
                ('link_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_link_attribute_varchar',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductLinkType',
            fields=[
                ('link_type_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_link_type',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductOption',
            fields=[
                ('option_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_require', models.SmallIntegerField()),
                ('sku', models.CharField(blank=True, max_length=64, null=True)),
                ('max_characters', models.IntegerField(blank=True, null=True)),
                ('file_extension', models.CharField(blank=True, max_length=50, null=True)),
                ('image_size_x', models.SmallIntegerField(blank=True, null=True)),
                ('image_size_y', models.SmallIntegerField(blank=True, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_option',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductOptionPrice',
            fields=[
                ('option_price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('price_type', models.CharField(max_length=7)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_option_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductOptionTitle',
            fields=[
                ('option_title_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_option_title',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductOptionTypePrice',
            fields=[
                ('option_type_price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_type_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('price_type', models.CharField(max_length=7)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_option_type_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductOptionTypeTitle',
            fields=[
                ('option_type_title_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_type_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_option_type_title',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductOptionTypeValue',
            fields=[
                ('option_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('sku', models.CharField(blank=True, max_length=64, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_option_type_value',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField()),
                ('child_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_relation',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductSuperAttribute',
            fields=[
                ('product_super_attribute_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('position', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_super_attribute',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductSuperAttributeLabel',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_super_attribute_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('use_default', models.SmallIntegerField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_super_attribute_label',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductSuperAttributePricing',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_super_attribute_id', models.IntegerField()),
                ('value_index', models.CharField(blank=True, max_length=255, null=True)),
                ('is_percent', models.SmallIntegerField(blank=True, null=True)),
                ('pricing_value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_super_attribute_pricing',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductSuperLink',
            fields=[
                ('link_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_super_link',
            },
        ),
        migrations.CreateModel(
            name='CatalogProductWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalog_product_website',
            },
        ),
        migrations.CreateModel(
            name='Catalogrule',
            fields=[
                ('rule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('is_active', models.SmallIntegerField()),
                ('conditions_serialized', models.TextField(blank=True, null=True)),
                ('actions_serialized', models.TextField(blank=True, null=True)),
                ('stop_rules_processing', models.SmallIntegerField()),
                ('sort_order', models.IntegerField()),
                ('simple_action', models.CharField(blank=True, max_length=32, null=True)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('sub_is_enable', models.SmallIntegerField()),
                ('sub_simple_action', models.CharField(blank=True, max_length=32, null=True)),
                ('sub_discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule',
            },
        ),
        migrations.CreateModel(
            name='CatalogruleAffectedProduct',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule_affected_product',
            },
        ),
        migrations.CreateModel(
            name='CatalogruleCustomerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule_customer_group',
            },
        ),
        migrations.CreateModel(
            name='CatalogruleGroupWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule_group_website',
            },
        ),
        migrations.CreateModel(
            name='CatalogruleProduct',
            fields=[
                ('rule_product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_id', models.IntegerField()),
                ('from_time', models.IntegerField()),
                ('to_time', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('product_id', models.IntegerField()),
                ('action_operator', models.CharField(blank=True, max_length=10, null=True)),
                ('action_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('action_stop', models.SmallIntegerField()),
                ('sort_order', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('sub_simple_action', models.CharField(blank=True, max_length=32, null=True)),
                ('sub_discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule_product',
            },
        ),
        migrations.CreateModel(
            name='CatalogruleProductPrice',
            fields=[
                ('rule_product_price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_date', models.DateField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('product_id', models.IntegerField()),
                ('rule_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('website_id', models.SmallIntegerField()),
                ('latest_start_date', models.DateField(blank=True, null=True)),
                ('earliest_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule_product_price',
            },
        ),
        migrations.CreateModel(
            name='CatalogruleWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalogrule_website',
            },
        ),
        migrations.CreateModel(
            name='CatalogsearchFulltext',
            fields=[
                ('fulltext_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('data_index', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'catalogsearch_fulltext',
            },
        ),
        migrations.CreateModel(
            name='CatalogsearchQuery',
            fields=[
                ('query_id', models.IntegerField(primary_key=True, serialize=False)),
                ('query_text', models.CharField(blank=True, max_length=255, null=True)),
                ('num_results', models.IntegerField()),
                ('popularity', models.IntegerField()),
                ('redirect', models.CharField(blank=True, max_length=255, null=True)),
                ('synonym_for', models.CharField(blank=True, max_length=255, null=True)),
                ('store_id', models.SmallIntegerField()),
                ('display_in_terms', models.SmallIntegerField()),
                ('is_active', models.SmallIntegerField(blank=True, null=True)),
                ('is_processed', models.SmallIntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'catalogsearch_query',
            },
        ),
        migrations.CreateModel(
            name='CatalogsearchResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('relevance', models.DecimalField(decimal_places=4, max_digits=20)),
            ],
            options={
                'managed': False,
                'db_table': 'catalogsearch_result',
            },
        ),
        migrations.CreateModel(
            name='CheckoutAgreement',
            fields=[
                ('agreement_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('content_height', models.CharField(blank=True, max_length=25, null=True)),
                ('checkbox_text', models.TextField(blank=True, null=True)),
                ('is_active', models.SmallIntegerField()),
                ('is_html', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'checkout_agreement',
            },
        ),
        migrations.CreateModel(
            name='CheckoutAgreementStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'checkout_agreement_store',
            },
        ),
        migrations.CreateModel(
            name='CmsBlock',
            fields=[
                ('block_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('identifier', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('creation_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cms_block',
            },
        ),
        migrations.CreateModel(
            name='CmsBlockStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cms_block_store',
            },
        ),
        migrations.CreateModel(
            name='CmsPage',
            fields=[
                ('page_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('root_template', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_keywords', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('content_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('creation_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.SmallIntegerField()),
                ('sort_order', models.SmallIntegerField()),
                ('layout_update_xml', models.TextField(blank=True, null=True)),
                ('custom_theme', models.CharField(blank=True, max_length=100, null=True)),
                ('custom_root_template', models.CharField(blank=True, max_length=255, null=True)),
                ('custom_layout_update_xml', models.TextField(blank=True, null=True)),
                ('custom_theme_from', models.DateField(blank=True, null=True)),
                ('custom_theme_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'cms_page',
            },
        ),
        migrations.CreateModel(
            name='CmsPageStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cms_page_store',
            },
        ),
        migrations.CreateModel(
            name='CoreCache',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('create_time', models.IntegerField(blank=True, null=True)),
                ('update_time', models.IntegerField(blank=True, null=True)),
                ('expire_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_cache',
            },
        ),
        migrations.CreateModel(
            name='CoreCacheOption',
            fields=[
                ('code', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('value', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_cache_option',
            },
        ),
        migrations.CreateModel(
            name='CoreCacheTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
                ('cache_id', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'core_cache_tag',
            },
        ),
        migrations.CreateModel(
            name='CoreConfigData',
            fields=[
                ('config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('scope', models.CharField(max_length=8)),
                ('scope_id', models.IntegerField()),
                ('path', models.CharField(max_length=255)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_config_data',
            },
        ),
        migrations.CreateModel(
            name='CoreEmailQueue',
            fields=[
                ('message_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_id', models.IntegerField(blank=True, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=128, null=True)),
                ('event_type', models.CharField(blank=True, max_length=128, null=True)),
                ('message_body_hash', models.CharField(max_length=64)),
                ('message_body', models.TextField()),
                ('message_parameters', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_email_queue',
            },
        ),
        migrations.CreateModel(
            name='CoreEmailQueueRecipients',
            fields=[
                ('recipient_id', models.IntegerField(primary_key=True, serialize=False)),
                ('message_id', models.IntegerField()),
                ('recipient_email', models.CharField(max_length=128)),
                ('recipient_name', models.CharField(max_length=255)),
                ('email_type', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_email_queue_recipients',
            },
        ),
        migrations.CreateModel(
            name='CoreEmailTemplate',
            fields=[
                ('template_id', models.IntegerField(primary_key=True, serialize=False)),
                ('template_code', models.CharField(max_length=150, unique=True)),
                ('template_text', models.TextField()),
                ('template_styles', models.TextField(blank=True, null=True)),
                ('template_type', models.IntegerField(blank=True, null=True)),
                ('template_subject', models.CharField(max_length=200)),
                ('template_sender_name', models.CharField(blank=True, max_length=200, null=True)),
                ('template_sender_email', models.CharField(blank=True, max_length=200, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('orig_template_code', models.CharField(blank=True, max_length=200, null=True)),
                ('orig_template_variables', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_email_template',
            },
        ),
        migrations.CreateModel(
            name='CoreFlag',
            fields=[
                ('flag_id', models.IntegerField(primary_key=True, serialize=False)),
                ('flag_code', models.CharField(max_length=255)),
                ('state', models.SmallIntegerField()),
                ('flag_data', models.TextField(blank=True, null=True)),
                ('last_update', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_flag',
            },
        ),
        migrations.CreateModel(
            name='CoreLayoutLink',
            fields=[
                ('layout_link_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField()),
                ('area', models.CharField(blank=True, max_length=64, null=True)),
                ('package', models.CharField(blank=True, max_length=64, null=True)),
                ('theme', models.CharField(blank=True, max_length=64, null=True)),
                ('layout_update_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_layout_link',
            },
        ),
        migrations.CreateModel(
            name='CoreLayoutUpdate',
            fields=[
                ('layout_update_id', models.IntegerField(primary_key=True, serialize=False)),
                ('handle', models.CharField(blank=True, max_length=255, null=True)),
                ('xml', models.TextField(blank=True, null=True)),
                ('sort_order', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_layout_update',
            },
        ),
        migrations.CreateModel(
            name='CoreResource',
            fields=[
                ('code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('data_version', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_resource',
            },
        ),
        migrations.CreateModel(
            name='CoreSession',
            fields=[
                ('session_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('session_expires', models.IntegerField()),
                ('session_data', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_session',
            },
        ),
        migrations.CreateModel(
            name='CoreStore',
            fields=[
                ('store_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('website_id', models.SmallIntegerField()),
                ('group_id', models.SmallIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('sort_order', models.SmallIntegerField()),
                ('is_active', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_store',
            },
        ),
        migrations.CreateModel(
            name='CoreStoreGroup',
            fields=[
                ('group_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('website_id', models.SmallIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('root_category_id', models.IntegerField()),
                ('default_store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_store_group',
            },
        ),
        migrations.CreateModel(
            name='CoreTranslate',
            fields=[
                ('key_id', models.IntegerField(primary_key=True, serialize=False)),
                ('string', models.CharField(max_length=255)),
                ('store_id', models.SmallIntegerField()),
                ('translate', models.CharField(blank=True, max_length=255, null=True)),
                ('locale', models.CharField(max_length=20)),
                ('crc_string', models.BigIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'core_translate',
            },
        ),
        migrations.CreateModel(
            name='CoreUrlRewrite',
            fields=[
                ('url_rewrite_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField()),
                ('id_path', models.CharField(blank=True, max_length=255, null=True)),
                ('request_path', models.CharField(blank=True, max_length=255, null=True)),
                ('target_path', models.CharField(blank=True, max_length=255, null=True)),
                ('is_system', models.SmallIntegerField(blank=True, null=True)),
                ('options', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_url_rewrite',
            },
        ),
        migrations.CreateModel(
            name='CoreVariable',
            fields=[
                ('variable_id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_variable',
            },
        ),
        migrations.CreateModel(
            name='CoreVariableValue',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('variable_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('plain_value', models.TextField(blank=True, null=True)),
                ('html_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_variable_value',
            },
        ),
        migrations.CreateModel(
            name='CoreWebsite',
            fields=[
                ('website_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('sort_order', models.SmallIntegerField()),
                ('default_group_id', models.SmallIntegerField()),
                ('is_default', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'core_website',
            },
        ),
        migrations.CreateModel(
            name='CouponAggregated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_uses', models.IntegerField()),
                ('subtotal_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('subtotal_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('rule_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'coupon_aggregated',
            },
        ),
        migrations.CreateModel(
            name='CouponAggregatedOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_uses', models.IntegerField()),
                ('subtotal_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('rule_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'coupon_aggregated_order',
            },
        ),
        migrations.CreateModel(
            name='CouponAggregatedUpdated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_uses', models.IntegerField()),
                ('subtotal_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('subtotal_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('rule_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'coupon_aggregated_updated',
            },
        ),
        migrations.CreateModel(
            name='CronSchedule',
            fields=[
                ('schedule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('job_code', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=7)),
                ('messages', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'cron_schedule',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressEntity',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_id', models.SmallIntegerField()),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('is_active', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_address_entity',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressEntityDatetime',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_address_entity_datetime',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressEntityDecimal',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'customer_address_entity_decimal',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressEntityInt',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_address_entity_int',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressEntityText',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_address_entity_text',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressEntityVarchar',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'customer_address_entity_varchar',
            },
        ),
        migrations.CreateModel(
            name='CustomerEavAttribute',
            fields=[
                ('attribute_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('is_visible', models.SmallIntegerField()),
                ('input_filter', models.CharField(blank=True, max_length=255, null=True)),
                ('multiline_count', models.SmallIntegerField()),
                ('validate_rules', models.TextField(blank=True, null=True)),
                ('is_system', models.SmallIntegerField()),
                ('sort_order', models.IntegerField()),
                ('data_model', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'customer_eav_attribute',
            },
        ),
        migrations.CreateModel(
            name='CustomerEavAttributeWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('is_visible', models.SmallIntegerField(blank=True, null=True)),
                ('is_required', models.SmallIntegerField(blank=True, null=True)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('multiline_count', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'customer_eav_attribute_website',
            },
        ),
        migrations.CreateModel(
            name='CustomerEntity',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_id', models.SmallIntegerField()),
                ('website_id', models.SmallIntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('group_id', models.SmallIntegerField()),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('is_active', models.SmallIntegerField()),
                ('disable_auto_group_change', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_entity',
            },
        ),
        migrations.CreateModel(
            name='CustomerEntityDatetime',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_entity_datetime',
            },
        ),
        migrations.CreateModel(
            name='CustomerEntityDecimal',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'customer_entity_decimal',
            },
        ),
        migrations.CreateModel(
            name='CustomerEntityInt',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_entity_int',
            },
        ),
        migrations.CreateModel(
            name='CustomerEntityText',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_entity_text',
            },
        ),
        migrations.CreateModel(
            name='CustomerEntityVarchar',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'customer_entity_varchar',
            },
        ),
        migrations.CreateModel(
            name='CustomerFormAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_code', models.CharField(max_length=32)),
                ('attribute_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_form_attribute',
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('customer_group_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('customer_group_code', models.CharField(max_length=32)),
                ('tax_class_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'customer_group',
            },
        ),
        migrations.CreateModel(
            name='DataflowBatch',
            fields=[
                ('batch_id', models.IntegerField(primary_key=True, serialize=False)),
                ('profile_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('adapter', models.CharField(blank=True, max_length=128, null=True)),
                ('params', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_batch',
            },
        ),
        migrations.CreateModel(
            name='DataflowBatchExport',
            fields=[
                ('batch_export_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField()),
                ('batch_data', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_batch_export',
            },
        ),
        migrations.CreateModel(
            name='DataflowBatchImport',
            fields=[
                ('batch_import_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField()),
                ('batch_data', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_batch_import',
            },
        ),
        migrations.CreateModel(
            name='DataflowImportData',
            fields=[
                ('import_id', models.IntegerField(primary_key=True, serialize=False)),
                ('session_id', models.IntegerField(blank=True, null=True)),
                ('serial_number', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_import_data',
            },
        ),
        migrations.CreateModel(
            name='DataflowProfile',
            fields=[
                ('profile_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('actions_xml', models.TextField(blank=True, null=True)),
                ('gui_data', models.TextField(blank=True, null=True)),
                ('direction', models.CharField(blank=True, max_length=6, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=64, null=True)),
                ('store_id', models.SmallIntegerField()),
                ('data_transfer', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_profile',
            },
        ),
        migrations.CreateModel(
            name='DataflowProfileHistory',
            fields=[
                ('history_id', models.IntegerField(primary_key=True, serialize=False)),
                ('profile_id', models.IntegerField()),
                ('action_code', models.CharField(blank=True, max_length=64, null=True)),
                ('user_id', models.IntegerField()),
                ('performed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_profile_history',
            },
        ),
        migrations.CreateModel(
            name='DataflowSession',
            fields=[
                ('session_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('file', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('direction', models.CharField(blank=True, max_length=32, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dataflow_session',
            },
        ),
        migrations.CreateModel(
            name='DesignChange',
            fields=[
                ('design_change_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField()),
                ('design', models.CharField(blank=True, max_length=255, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'design_change',
            },
        ),
        migrations.CreateModel(
            name='DirectoryCountry',
            fields=[
                ('country_id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('iso2_code', models.CharField(blank=True, max_length=2, null=True)),
                ('iso3_code', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'directory_country',
            },
        ),
        migrations.CreateModel(
            name='DirectoryCountryFormat',
            fields=[
                ('country_format_id', models.IntegerField(primary_key=True, serialize=False)),
                ('country_id', models.CharField(blank=True, max_length=2, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('format', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'directory_country_format',
            },
        ),
        migrations.CreateModel(
            name='DirectoryCountryRegion',
            fields=[
                ('region_id', models.IntegerField(primary_key=True, serialize=False)),
                ('country_id', models.CharField(max_length=4)),
                ('code', models.CharField(blank=True, max_length=32, null=True)),
                ('default_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'directory_country_region',
            },
        ),
        migrations.CreateModel(
            name='DirectoryCountryRegionName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(max_length=8)),
                ('region_id', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'directory_country_region_name',
            },
        ),
        migrations.CreateModel(
            name='DirectoryCurrencyRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_from', models.CharField(max_length=3)),
                ('currency_to', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=12, max_digits=24)),
            ],
            options={
                'managed': False,
                'db_table': 'directory_currency_rate',
            },
        ),
        migrations.CreateModel(
            name='DownloadableLink',
            fields=[
                ('link_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('sort_order', models.IntegerField()),
                ('number_of_downloads', models.IntegerField(blank=True, null=True)),
                ('is_shareable', models.SmallIntegerField()),
                ('link_url', models.CharField(blank=True, max_length=255, null=True)),
                ('link_file', models.CharField(blank=True, max_length=255, null=True)),
                ('link_type', models.CharField(blank=True, max_length=20, null=True)),
                ('sample_url', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_file', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_link',
            },
        ),
        migrations.CreateModel(
            name='DownloadableLinkPrice',
            fields=[
                ('price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('link_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_link_price',
            },
        ),
        migrations.CreateModel(
            name='DownloadableLinkPurchased',
            fields=[
                ('purchased_id', models.IntegerField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('order_increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('order_item_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=255, null=True)),
                ('link_section_title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_link_purchased',
            },
        ),
        migrations.CreateModel(
            name='DownloadableLinkPurchasedItem',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('purchased_id', models.IntegerField()),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('link_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_downloads_bought', models.IntegerField()),
                ('number_of_downloads_used', models.IntegerField()),
                ('link_id', models.IntegerField()),
                ('link_title', models.CharField(blank=True, max_length=255, null=True)),
                ('is_shareable', models.SmallIntegerField()),
                ('link_url', models.CharField(blank=True, max_length=255, null=True)),
                ('link_file', models.CharField(blank=True, max_length=255, null=True)),
                ('link_type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_link_purchased_item',
            },
        ),
        migrations.CreateModel(
            name='DownloadableLinkTitle',
            fields=[
                ('title_id', models.IntegerField(primary_key=True, serialize=False)),
                ('link_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_link_title',
            },
        ),
        migrations.CreateModel(
            name='DownloadableSample',
            fields=[
                ('sample_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('sample_url', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_file', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_type', models.CharField(blank=True, max_length=20, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_sample',
            },
        ),
        migrations.CreateModel(
            name='DownloadableSampleTitle',
            fields=[
                ('title_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sample_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'downloadable_sample_title',
            },
        ),
        migrations.CreateModel(
            name='EavAttribute',
            fields=[
                ('attribute_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_code', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute_model', models.CharField(blank=True, max_length=255, null=True)),
                ('backend_model', models.CharField(blank=True, max_length=255, null=True)),
                ('backend_type', models.CharField(max_length=8)),
                ('backend_table', models.CharField(blank=True, max_length=255, null=True)),
                ('frontend_model', models.CharField(blank=True, max_length=255, null=True)),
                ('frontend_input', models.CharField(blank=True, max_length=50, null=True)),
                ('frontend_label', models.CharField(blank=True, max_length=255, null=True)),
                ('frontend_class', models.CharField(blank=True, max_length=255, null=True)),
                ('source_model', models.CharField(blank=True, max_length=255, null=True)),
                ('is_required', models.SmallIntegerField()),
                ('is_user_defined', models.SmallIntegerField()),
                ('default_value', models.TextField(blank=True, null=True)),
                ('is_unique', models.SmallIntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_attribute',
            },
        ),
        migrations.CreateModel(
            name='EavAttributeGroup',
            fields=[
                ('attribute_group_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('attribute_set_id', models.SmallIntegerField()),
                ('attribute_group_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.SmallIntegerField()),
                ('default_id', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_attribute_group',
            },
        ),
        migrations.CreateModel(
            name='EavAttributeLabel',
            fields=[
                ('attribute_label_id', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_attribute_label',
            },
        ),
        migrations.CreateModel(
            name='EavAttributeOption',
            fields=[
                ('option_id', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_id', models.SmallIntegerField()),
                ('sort_order', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_attribute_option',
            },
        ),
        migrations.CreateModel(
            name='EavAttributeOptionValue',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_attribute_option_value',
            },
        ),
        migrations.CreateModel(
            name='EavAttributeSet',
            fields=[
                ('attribute_set_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_attribute_set',
            },
        ),
        migrations.CreateModel(
            name='EavEntity',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_id', models.SmallIntegerField()),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('is_active', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity',
            },
        ),
        migrations.CreateModel(
            name='EavEntityAttribute',
            fields=[
                ('entity_attribute_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_set_id', models.SmallIntegerField()),
                ('attribute_group_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('sort_order', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_attribute',
            },
        ),
        migrations.CreateModel(
            name='EavEntityDatetime',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_datetime',
            },
        ),
        migrations.CreateModel(
            name='EavEntityDecimal',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_decimal',
            },
        ),
        migrations.CreateModel(
            name='EavEntityInt',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_int',
            },
        ),
        migrations.CreateModel(
            name='EavEntityStore',
            fields=[
                ('entity_store_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('increment_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('increment_last_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_store',
            },
        ),
        migrations.CreateModel(
            name='EavEntityText',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_text',
            },
        ),
        migrations.CreateModel(
            name='EavEntityType',
            fields=[
                ('entity_type_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('entity_type_code', models.CharField(max_length=50)),
                ('entity_model', models.CharField(max_length=255)),
                ('attribute_model', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_table', models.CharField(blank=True, max_length=255, null=True)),
                ('value_table_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_id_field', models.CharField(blank=True, max_length=255, null=True)),
                ('is_data_sharing', models.SmallIntegerField()),
                ('data_sharing_key', models.CharField(blank=True, max_length=100, null=True)),
                ('default_attribute_set_id', models.SmallIntegerField()),
                ('increment_model', models.CharField(blank=True, max_length=255, null=True)),
                ('increment_per_store', models.SmallIntegerField()),
                ('increment_pad_length', models.SmallIntegerField()),
                ('increment_pad_char', models.CharField(max_length=1)),
                ('additional_attribute_table', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_attribute_collection', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_type',
            },
        ),
        migrations.CreateModel(
            name='EavEntityVarchar',
            fields=[
                ('value_id', models.IntegerField(primary_key=True, serialize=False)),
                ('entity_type_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('entity_id', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_entity_varchar',
            },
        ),
        migrations.CreateModel(
            name='EavFormElement',
            fields=[
                ('element_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type_id', models.SmallIntegerField()),
                ('fieldset_id', models.SmallIntegerField(blank=True, null=True)),
                ('attribute_id', models.SmallIntegerField()),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_form_element',
            },
        ),
        migrations.CreateModel(
            name='EavFormFieldset',
            fields=[
                ('fieldset_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('type_id', models.SmallIntegerField()),
                ('code', models.CharField(max_length=64)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_form_fieldset',
            },
        ),
        migrations.CreateModel(
            name='EavFormFieldsetLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fieldset_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('label', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'eav_form_fieldset_label',
            },
        ),
        migrations.CreateModel(
            name='EavFormType',
            fields=[
                ('type_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=64)),
                ('label', models.CharField(max_length=255)),
                ('is_system', models.SmallIntegerField()),
                ('theme', models.CharField(blank=True, max_length=64, null=True)),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_form_type',
            },
        ),
        migrations.CreateModel(
            name='EavFormTypeEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.SmallIntegerField()),
                ('entity_type_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'eav_form_type_entity',
            },
        ),
        migrations.CreateModel(
            name='GiftMessage',
            fields=[
                ('gift_message_id', models.IntegerField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('sender', models.CharField(blank=True, max_length=255, null=True)),
                ('recipient', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'gift_message',
            },
        ),
        migrations.CreateModel(
            name='ImportexportImportdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.CharField(max_length=50)),
                ('behavior', models.CharField(max_length=10)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'importexport_importdata',
            },
        ),
        migrations.CreateModel(
            name='IndexEvent',
            fields=[
                ('event_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=64)),
                ('entity', models.CharField(max_length=64)),
                ('entity_pk', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('old_data', models.TextField(blank=True, null=True)),
                ('new_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'index_event',
            },
        ),
        migrations.CreateModel(
            name='IndexProcess',
            fields=[
                ('process_id', models.IntegerField(primary_key=True, serialize=False)),
                ('indexer_code', models.CharField(max_length=32, unique=True)),
                ('status', models.CharField(max_length=15)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('mode', models.CharField(max_length=9)),
            ],
            options={
                'managed': False,
                'db_table': 'index_process',
            },
        ),
        migrations.CreateModel(
            name='IndexProcessEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_id', models.IntegerField()),
                ('event_id', models.BigIntegerField()),
                ('status', models.CharField(max_length=7)),
            ],
            options={
                'managed': False,
                'db_table': 'index_process_event',
            },
        ),
        migrations.CreateModel(
            name='LogCustomer',
            fields=[
                ('log_id', models.IntegerField(primary_key=True, serialize=False)),
                ('visitor_id', models.BigIntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField()),
                ('login_at', models.DateTimeField()),
                ('logout_at', models.DateTimeField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'log_customer',
            },
        ),
        migrations.CreateModel(
            name='LogQuote',
            fields=[
                ('quote_id', models.IntegerField(primary_key=True, serialize=False)),
                ('visitor_id', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'log_quote',
            },
        ),
        migrations.CreateModel(
            name='LogSummary',
            fields=[
                ('summary_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField()),
                ('type_id', models.SmallIntegerField(blank=True, null=True)),
                ('visitor_count', models.IntegerField()),
                ('customer_count', models.IntegerField()),
                ('add_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'log_summary',
            },
        ),
        migrations.CreateModel(
            name='LogSummaryType',
            fields=[
                ('type_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('type_code', models.CharField(blank=True, max_length=64, null=True)),
                ('period', models.SmallIntegerField()),
                ('period_type', models.CharField(max_length=6)),
            ],
            options={
                'managed': False,
                'db_table': 'log_summary_type',
            },
        ),
        migrations.CreateModel(
            name='LogUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_id', models.BigIntegerField()),
                ('visitor_id', models.BigIntegerField(blank=True, null=True)),
                ('visit_time', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'log_url',
            },
        ),
        migrations.CreateModel(
            name='LogUrlInfo',
            fields=[
                ('url_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'log_url_info',
            },
        ),
        migrations.CreateModel(
            name='LogVisitor',
            fields=[
                ('visitor_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=64, null=True)),
                ('first_visit_at', models.DateTimeField(blank=True, null=True)),
                ('last_visit_at', models.DateTimeField()),
                ('last_url_id', models.BigIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'log_visitor',
            },
        ),
        migrations.CreateModel(
            name='LogVisitorInfo',
            fields=[
                ('visitor_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('http_referer', models.CharField(blank=True, max_length=255, null=True)),
                ('http_user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('http_accept_charset', models.CharField(blank=True, max_length=255, null=True)),
                ('http_accept_language', models.CharField(blank=True, max_length=255, null=True)),
                ('server_addr', models.CharField(blank=True, max_length=16, null=True)),
                ('remote_addr', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'log_visitor_info',
            },
        ),
        migrations.CreateModel(
            name='LogVisitorOnline',
            fields=[
                ('visitor_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('visitor_type', models.CharField(max_length=1)),
                ('remote_addr', models.CharField(blank=True, max_length=16, null=True)),
                ('first_visit_at', models.DateTimeField(blank=True, null=True)),
                ('last_visit_at', models.DateTimeField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('last_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'log_visitor_online',
            },
        ),
        migrations.CreateModel(
            name='NewsletterProblem',
            fields=[
                ('problem_id', models.IntegerField(primary_key=True, serialize=False)),
                ('subscriber_id', models.IntegerField(blank=True, null=True)),
                ('queue_id', models.IntegerField()),
                ('problem_error_code', models.IntegerField(blank=True, null=True)),
                ('problem_error_text', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'newsletter_problem',
            },
        ),
        migrations.CreateModel(
            name='NewsletterQueue',
            fields=[
                ('queue_id', models.IntegerField(primary_key=True, serialize=False)),
                ('template_id', models.IntegerField()),
                ('newsletter_type', models.IntegerField(blank=True, null=True)),
                ('newsletter_text', models.TextField(blank=True, null=True)),
                ('newsletter_styles', models.TextField(blank=True, null=True)),
                ('newsletter_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('newsletter_sender_name', models.CharField(blank=True, max_length=200, null=True)),
                ('newsletter_sender_email', models.CharField(blank=True, max_length=200, null=True)),
                ('queue_status', models.IntegerField()),
                ('queue_start_at', models.DateTimeField(blank=True, null=True)),
                ('queue_finish_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'newsletter_queue',
            },
        ),
        migrations.CreateModel(
            name='NewsletterQueueLink',
            fields=[
                ('queue_link_id', models.IntegerField(primary_key=True, serialize=False)),
                ('queue_id', models.IntegerField()),
                ('subscriber_id', models.IntegerField()),
                ('letter_sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'newsletter_queue_link',
            },
        ),
        migrations.CreateModel(
            name='NewsletterQueueStoreLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queue_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'newsletter_queue_store_link',
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('subscriber_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('change_status_at', models.DateTimeField(blank=True, null=True)),
                ('customer_id', models.IntegerField()),
                ('subscriber_email', models.CharField(blank=True, max_length=150, null=True)),
                ('subscriber_status', models.IntegerField()),
                ('subscriber_confirm_code', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'newsletter_subscriber',
            },
        ),
        migrations.CreateModel(
            name='NewsletterTemplate',
            fields=[
                ('template_id', models.IntegerField(primary_key=True, serialize=False)),
                ('template_code', models.CharField(blank=True, max_length=150, null=True)),
                ('template_text', models.TextField(blank=True, null=True)),
                ('template_text_preprocessed', models.TextField(blank=True, null=True)),
                ('template_styles', models.TextField(blank=True, null=True)),
                ('template_type', models.IntegerField(blank=True, null=True)),
                ('template_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('template_sender_name', models.CharField(blank=True, max_length=200, null=True)),
                ('template_sender_email', models.CharField(blank=True, max_length=200, null=True)),
                ('template_actual', models.SmallIntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'newsletter_template',
            },
        ),
        migrations.CreateModel(
            name='OauthConsumer',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=32, unique=True)),
                ('secret', models.CharField(max_length=32, unique=True)),
                ('callback_url', models.CharField(blank=True, max_length=255, null=True)),
                ('rejected_callback_url', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'oauth_consumer',
            },
        ),
        migrations.CreateModel(
            name='OauthNonce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(max_length=32, unique=True)),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'oauth_nonce',
            },
        ),
        migrations.CreateModel(
            name='OauthToken',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('consumer_id', models.IntegerField()),
                ('admin_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=16)),
                ('token', models.CharField(max_length=32, unique=True)),
                ('secret', models.CharField(max_length=32)),
                ('verifier', models.CharField(blank=True, max_length=32, null=True)),
                ('callback_url', models.CharField(max_length=255)),
                ('revoked', models.SmallIntegerField()),
                ('authorized', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'oauth_token',
            },
        ),
        migrations.CreateModel(
            name='PaypalCert',
            fields=[
                ('cert_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('website_id', models.SmallIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'paypal_cert',
            },
        ),
        migrations.CreateModel(
            name='PaypalPaymentTransaction',
            fields=[
                ('transaction_id', models.IntegerField(primary_key=True, serialize=False)),
                ('txn_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('additional_information', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'paypal_payment_transaction',
            },
        ),
        migrations.CreateModel(
            name='PaypalSettlementReport',
            fields=[
                ('report_id', models.IntegerField(primary_key=True, serialize=False)),
                ('report_date', models.DateTimeField(blank=True, null=True)),
                ('account_id', models.CharField(blank=True, max_length=64, null=True)),
                ('filename', models.CharField(blank=True, max_length=24, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'paypal_settlement_report',
            },
        ),
        migrations.CreateModel(
            name='PaypalSettlementReportRow',
            fields=[
                ('row_id', models.IntegerField(primary_key=True, serialize=False)),
                ('report_id', models.IntegerField()),
                ('transaction_id', models.CharField(blank=True, max_length=19, null=True)),
                ('invoice_id', models.CharField(blank=True, max_length=127, null=True)),
                ('paypal_reference_id', models.CharField(blank=True, max_length=19, null=True)),
                ('paypal_reference_id_type', models.CharField(blank=True, max_length=3, null=True)),
                ('transaction_event_code', models.CharField(blank=True, max_length=5, null=True)),
                ('transaction_initiation_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_completion_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_debit_or_credit', models.CharField(max_length=2)),
                ('gross_transaction_amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('gross_transaction_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('fee_debit_or_credit', models.CharField(blank=True, max_length=2, null=True)),
                ('fee_amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('fee_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('custom_field', models.CharField(blank=True, max_length=255, null=True)),
                ('consumer_id', models.CharField(blank=True, max_length=127, null=True)),
                ('payment_tracking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('store_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'paypal_settlement_report_row',
            },
        ),
        migrations.CreateModel(
            name='PermissionBlock',
            fields=[
                ('block_id', models.IntegerField(primary_key=True, serialize=False)),
                ('block_name', models.CharField(max_length=255, unique=True)),
                ('is_allowed', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'permission_block',
            },
        ),
        migrations.CreateModel(
            name='PermissionVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_id', models.IntegerField()),
                ('variable_name', models.CharField(max_length=255, unique=True)),
                ('is_allowed', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'permission_variable',
            },
        ),
        migrations.CreateModel(
            name='PersistentSession',
            fields=[
                ('persistent_id', models.IntegerField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50, unique=True)),
                ('customer_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('website_id', models.SmallIntegerField()),
                ('info', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'persistent_session',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('poll_id', models.IntegerField(primary_key=True, serialize=False)),
                ('poll_title', models.CharField(blank=True, max_length=255, null=True)),
                ('votes_count', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('date_posted', models.DateTimeField()),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('active', models.SmallIntegerField()),
                ('closed', models.SmallIntegerField()),
                ('answers_display', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'poll',
            },
        ),
        migrations.CreateModel(
            name='PollAnswer',
            fields=[
                ('answer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('poll_id', models.IntegerField()),
                ('answer_title', models.CharField(blank=True, max_length=255, null=True)),
                ('votes_count', models.IntegerField()),
                ('answer_order', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'poll_answer',
            },
        ),
        migrations.CreateModel(
            name='PollStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poll_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'poll_store',
            },
        ),
        migrations.CreateModel(
            name='PollVote',
            fields=[
                ('vote_id', models.IntegerField(primary_key=True, serialize=False)),
                ('poll_id', models.IntegerField()),
                ('poll_answer_id', models.IntegerField()),
                ('ip_address', models.CharField(blank=True, max_length=16, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('vote_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'poll_vote',
            },
        ),
        migrations.CreateModel(
            name='ProductAlertPrice',
            fields=[
                ('alert_price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('website_id', models.SmallIntegerField()),
                ('add_date', models.DateTimeField()),
                ('last_send_date', models.DateTimeField(blank=True, null=True)),
                ('send_count', models.SmallIntegerField()),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'product_alert_price',
            },
        ),
        migrations.CreateModel(
            name='ProductAlertStock',
            fields=[
                ('alert_stock_id', models.IntegerField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('add_date', models.DateTimeField()),
                ('send_date', models.DateTimeField(blank=True, null=True)),
                ('send_count', models.SmallIntegerField()),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'product_alert_stock',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('rating_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('entity_id', models.SmallIntegerField()),
                ('rating_code', models.CharField(max_length=64, unique=True)),
                ('position', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'rating',
            },
        ),
        migrations.CreateModel(
            name='RatingEntity',
            fields=[
                ('entity_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('entity_code', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'rating_entity',
            },
        ),
        migrations.CreateModel(
            name='RatingOption',
            fields=[
                ('option_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating_id', models.SmallIntegerField()),
                ('code', models.CharField(max_length=32)),
                ('value', models.SmallIntegerField()),
                ('position', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'rating_option',
            },
        ),
        migrations.CreateModel(
            name='RatingOptionVote',
            fields=[
                ('vote_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('option_id', models.IntegerField()),
                ('remote_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('remote_ip_long', models.CharField(blank=True, max_length=16, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('entity_pk_value', models.BigIntegerField()),
                ('rating_id', models.SmallIntegerField()),
                ('review_id', models.BigIntegerField(blank=True, null=True)),
                ('percent', models.SmallIntegerField()),
                ('value', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'rating_option_vote',
            },
        ),
        migrations.CreateModel(
            name='RatingOptionVoteAggregated',
            fields=[
                ('primary_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating_id', models.SmallIntegerField()),
                ('entity_pk_value', models.BigIntegerField()),
                ('vote_count', models.IntegerField()),
                ('vote_value_sum', models.IntegerField()),
                ('percent', models.SmallIntegerField()),
                ('percent_approved', models.SmallIntegerField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'rating_option_vote_aggregated',
            },
        ),
        migrations.CreateModel(
            name='RatingStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'rating_store',
            },
        ),
        migrations.CreateModel(
            name='RatingTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_id', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'rating_title',
            },
        ),
        migrations.CreateModel(
            name='ReportComparedProductIndex',
            fields=[
                ('index_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('visitor_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_compared_product_index',
            },
        ),
        migrations.CreateModel(
            name='ReportEvent',
            fields=[
                ('event_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('logged_at', models.DateTimeField()),
                ('event_type_id', models.SmallIntegerField()),
                ('object_id', models.IntegerField()),
                ('subject_id', models.IntegerField()),
                ('subtype', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_event',
            },
        ),
        migrations.CreateModel(
            name='ReportEventTypes',
            fields=[
                ('event_type_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=64)),
                ('customer_login', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_event_types',
            },
        ),
        migrations.CreateModel(
            name='ReportViewedProductAggregatedDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('views_num', models.IntegerField()),
                ('rating_pos', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_viewed_product_aggregated_daily',
            },
        ),
        migrations.CreateModel(
            name='ReportViewedProductAggregatedMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('views_num', models.IntegerField()),
                ('rating_pos', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_viewed_product_aggregated_monthly',
            },
        ),
        migrations.CreateModel(
            name='ReportViewedProductAggregatedYearly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('views_num', models.IntegerField()),
                ('rating_pos', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_viewed_product_aggregated_yearly',
            },
        ),
        migrations.CreateModel(
            name='ReportViewedProductIndex',
            fields=[
                ('index_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('visitor_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'report_viewed_product_index',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('entity_id', models.SmallIntegerField()),
                ('entity_pk_value', models.IntegerField()),
                ('status_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='ReviewDetail',
            fields=[
                ('detail_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('review_id', models.BigIntegerField()),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('detail', models.TextField()),
                ('nickname', models.CharField(max_length=128)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'review_detail',
            },
        ),
        migrations.CreateModel(
            name='ReviewEntity',
            fields=[
                ('entity_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('entity_code', models.CharField(max_length=32)),
            ],
            options={
                'managed': False,
                'db_table': 'review_entity',
            },
        ),
        migrations.CreateModel(
            name='ReviewEntitySummary',
            fields=[
                ('primary_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('entity_pk_value', models.BigIntegerField()),
                ('entity_type', models.SmallIntegerField()),
                ('reviews_count', models.SmallIntegerField()),
                ('rating_summary', models.SmallIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'review_entity_summary',
            },
        ),
        migrations.CreateModel(
            name='ReviewStatus',
            fields=[
                ('status_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('status_code', models.CharField(max_length=32)),
            ],
            options={
                'managed': False,
                'db_table': 'review_status',
            },
        ),
        migrations.CreateModel(
            name='ReviewStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_id', models.BigIntegerField()),
                ('store_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'review_store',
            },
        ),
        migrations.CreateModel(
            name='SalesBestsellersAggregatedDaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('rating_pos', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_bestsellers_aggregated_daily',
            },
        ),
        migrations.CreateModel(
            name='SalesBestsellersAggregatedMonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('rating_pos', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_bestsellers_aggregated_monthly',
            },
        ),
        migrations.CreateModel(
            name='SalesBestsellersAggregatedYearly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('rating_pos', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_bestsellers_aggregated_yearly',
            },
        ),
        migrations.CreateModel(
            name='SalesBillingAgreement',
            fields=[
                ('agreement_id', models.IntegerField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('method_code', models.CharField(max_length=32)),
                ('reference_id', models.CharField(max_length=32)),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('agreement_label', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_billing_agreement',
            },
        ),
        migrations.CreateModel(
            name='SalesBillingAgreementOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_id', models.IntegerField()),
                ('order_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_billing_agreement_order',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatCreditmemo',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('adjustment_positive', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_adjustment_negative', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('adjustment_negative', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_base_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_global_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_adjustment', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('adjustment', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_adjustment_positive', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('order_id', models.IntegerField()),
                ('email_sent', models.SmallIntegerField(blank=True, null=True)),
                ('creditmemo_status', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('shipping_address_id', models.IntegerField(blank=True, null=True)),
                ('billing_address_id', models.IntegerField(blank=True, null=True)),
                ('invoice_id', models.IntegerField(blank=True, null=True)),
                ('store_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('order_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('global_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_hidden_tax_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_creditmemo',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatCreditmemoComment',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('is_customer_notified', models.IntegerField(blank=True, null=True)),
                ('is_visible_on_front', models.SmallIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_creditmemo_comment',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatCreditmemoGrid',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('store_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_base_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_global_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('order_id', models.IntegerField()),
                ('creditmemo_status', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('invoice_id', models.IntegerField(blank=True, null=True)),
                ('store_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('order_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('global_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('order_increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('order_created_at', models.DateTimeField(blank=True, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_creditmemo_grid',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatCreditmemoItem',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('base_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied', models.TextField(blank=True, null=True)),
                ('base_weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_applied_row_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_row_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_creditmemo_item',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatInvoice',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_base_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_global_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('billing_address_id', models.IntegerField(blank=True, null=True)),
                ('is_used_for_refund', models.SmallIntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField()),
                ('email_sent', models.SmallIntegerField(blank=True, null=True)),
                ('can_void_flag', models.SmallIntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('shipping_address_id', models.IntegerField(blank=True, null=True)),
                ('store_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('global_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_hidden_tax_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_invoice',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatInvoiceComment',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('is_customer_notified', models.SmallIntegerField(blank=True, null=True)),
                ('is_visible_on_front', models.SmallIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_invoice_comment',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatInvoiceGrid',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('order_id', models.IntegerField()),
                ('state', models.IntegerField(blank=True, null=True)),
                ('store_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('order_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('global_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('order_increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('order_created_at', models.DateTimeField(blank=True, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_invoice_grid',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatInvoiceItem',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('base_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_applied_row_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_row_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied', models.TextField(blank=True, null=True)),
                ('weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_invoice_item',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatOrder',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=32, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=255, null=True)),
                ('protect_code', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_virtual', models.SmallIntegerField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_global_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_invoiced_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_offline_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_online_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_paid', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_qty_ordered', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_base_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_order_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_offline_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_online_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_paid', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_qty_ordered', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('can_ship_partially', models.SmallIntegerField(blank=True, null=True)),
                ('can_ship_partially_item', models.SmallIntegerField(blank=True, null=True)),
                ('customer_is_guest', models.SmallIntegerField(blank=True, null=True)),
                ('customer_note_notify', models.SmallIntegerField(blank=True, null=True)),
                ('billing_address_id', models.IntegerField(blank=True, null=True)),
                ('customer_group_id', models.SmallIntegerField(blank=True, null=True)),
                ('edit_increment', models.IntegerField(blank=True, null=True)),
                ('email_sent', models.SmallIntegerField(blank=True, null=True)),
                ('forced_shipment_with_invoice', models.SmallIntegerField(blank=True, null=True)),
                ('payment_auth_expiration', models.IntegerField(blank=True, null=True)),
                ('quote_address_id', models.IntegerField(blank=True, null=True)),
                ('quote_id', models.IntegerField(blank=True, null=True)),
                ('shipping_address_id', models.IntegerField(blank=True, null=True)),
                ('adjustment_negative', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('adjustment_positive', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_adjustment_negative', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_adjustment_positive', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_due', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('payment_authorization_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_due', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('customer_dob', models.DateTimeField(blank=True, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('applied_rule_ids', models.CharField(blank=True, max_length=255, null=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('customer_email', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_middlename', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_taxvat', models.CharField(blank=True, max_length=255, null=True)),
                ('discount_description', models.CharField(blank=True, max_length=255, null=True)),
                ('ext_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ext_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('global_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('hold_before_state', models.CharField(blank=True, max_length=255, null=True)),
                ('hold_before_status', models.CharField(blank=True, max_length=255, null=True)),
                ('order_currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('original_increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('relation_child_id', models.CharField(blank=True, max_length=32, null=True)),
                ('relation_child_real_id', models.CharField(blank=True, max_length=32, null=True)),
                ('relation_parent_id', models.CharField(blank=True, max_length=32, null=True)),
                ('relation_parent_real_id', models.CharField(blank=True, max_length=32, null=True)),
                ('remote_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_method', models.CharField(blank=True, max_length=255, null=True)),
                ('store_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('store_name', models.CharField(blank=True, max_length=255, null=True)),
                ('x_forwarded_for', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('total_item_count', models.SmallIntegerField()),
                ('customer_gender', models.IntegerField(blank=True, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_hidden_tax_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('coupon_rule_name', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_ipn_customer_notified', models.IntegerField(blank=True, null=True)),
                ('gift_message_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_order',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatOrderAddress',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('customer_address_id', models.IntegerField(blank=True, null=True)),
                ('quote_address_id', models.IntegerField(blank=True, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.CharField(blank=True, max_length=2, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('address_type', models.CharField(blank=True, max_length=255, null=True)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('middlename', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_id', models.TextField(blank=True, null=True)),
                ('vat_is_valid', models.SmallIntegerField(blank=True, null=True)),
                ('vat_request_id', models.TextField(blank=True, null=True)),
                ('vat_request_date', models.TextField(blank=True, null=True)),
                ('vat_request_success', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_order_address',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatOrderGrid',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('store_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_total_paid', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_paid', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=3, null=True)),
                ('order_currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_name', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_order_grid',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatOrderItem',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('parent_item_id', models.IntegerField(blank=True, null=True)),
                ('quote_item_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('product_options', models.TextField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('is_virtual', models.SmallIntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('applied_rule_ids', models.TextField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('free_shipping', models.SmallIntegerField()),
                ('is_qty_decimal', models.SmallIntegerField(blank=True, null=True)),
                ('no_discount', models.SmallIntegerField()),
                ('qty_backordered', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty_ordered', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty_shipped', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('original_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_original_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('row_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_row_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('row_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_before_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_before_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('ext_order_item_id', models.CharField(blank=True, max_length=255, null=True)),
                ('locked_do_invoice', models.SmallIntegerField(blank=True, null=True)),
                ('locked_do_ship', models.SmallIntegerField(blank=True, null=True)),
                ('price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('is_nominal', models.IntegerField()),
                ('tax_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('gift_message_id', models.IntegerField(blank=True, null=True)),
                ('gift_message_available', models.IntegerField(blank=True, null=True)),
                ('base_weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_applied_row_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_row_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied', models.TextField(blank=True, null=True)),
                ('weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_order_item',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatOrderPayment',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('base_shipping_captured', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_captured', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_paid', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_authorized', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_paid_online', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_refunded_online', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount_authorized', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_ordered', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount_ordered', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_amount_canceled', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('quote_payment_id', models.IntegerField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('cc_exp_month', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_ss_start_year', models.CharField(blank=True, max_length=255, null=True)),
                ('echeck_bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_debug_request_body', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_secure_verify', models.CharField(blank=True, max_length=255, null=True)),
                ('protection_eligibility', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_approval', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_last4', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_status_description', models.CharField(blank=True, max_length=255, null=True)),
                ('echeck_type', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_debug_response_serialized', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_ss_start_month', models.CharField(blank=True, max_length=255, null=True)),
                ('echeck_account_type', models.CharField(blank=True, max_length=255, null=True)),
                ('last_trans_id', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_cid_status', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_type', models.CharField(blank=True, max_length=255, null=True)),
                ('po_number', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_exp_year', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_status', models.CharField(blank=True, max_length=255, null=True)),
                ('echeck_routing_number', models.CharField(blank=True, max_length=255, null=True)),
                ('account_status', models.CharField(blank=True, max_length=255, null=True)),
                ('anet_trans_method', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_debug_response_body', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_ss_issue', models.CharField(blank=True, max_length=255, null=True)),
                ('echeck_account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_avs_status', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_number_enc', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_trans_id', models.CharField(blank=True, max_length=255, null=True)),
                ('paybox_request_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address_status', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_information', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_order_payment',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatOrderStatusHistory',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('is_customer_notified', models.IntegerField(blank=True, null=True)),
                ('is_visible_on_front', models.SmallIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('entity_name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_order_status_history',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuote',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('converted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.SmallIntegerField(blank=True, null=True)),
                ('is_virtual', models.SmallIntegerField(blank=True, null=True)),
                ('is_multi_shipping', models.SmallIntegerField(blank=True, null=True)),
                ('items_count', models.IntegerField(blank=True, null=True)),
                ('items_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('orig_order_id', models.IntegerField(blank=True, null=True)),
                ('store_to_base_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('store_to_quote_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('store_currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('quote_currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_grand_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('checkout_method', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('customer_tax_class_id', models.IntegerField(blank=True, null=True)),
                ('customer_group_id', models.IntegerField(blank=True, null=True)),
                ('customer_email', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_prefix', models.CharField(blank=True, max_length=40, null=True)),
                ('customer_firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_middlename', models.CharField(blank=True, max_length=40, null=True)),
                ('customer_lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_suffix', models.CharField(blank=True, max_length=40, null=True)),
                ('customer_dob', models.DateTimeField(blank=True, null=True)),
                ('customer_note', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_note_notify', models.SmallIntegerField(blank=True, null=True)),
                ('customer_is_guest', models.SmallIntegerField(blank=True, null=True)),
                ('remote_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('applied_rule_ids', models.CharField(blank=True, max_length=255, null=True)),
                ('reserved_order_id', models.CharField(blank=True, max_length=64, null=True)),
                ('password_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=255, null=True)),
                ('global_currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('base_to_global_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_to_quote_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('customer_taxvat', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_gender', models.CharField(blank=True, max_length=255, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_with_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_with_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('is_changed', models.IntegerField(blank=True, null=True)),
                ('trigger_recollect', models.SmallIntegerField()),
                ('ext_shipping_info', models.TextField(blank=True, null=True)),
                ('gift_message_id', models.IntegerField(blank=True, null=True)),
                ('is_persistent', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuoteAddress',
            fields=[
                ('address_id', models.IntegerField(primary_key=True, serialize=False)),
                ('quote_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('save_in_address_book', models.SmallIntegerField(blank=True, null=True)),
                ('customer_address_id', models.IntegerField(blank=True, null=True)),
                ('address_type', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('prefix', models.CharField(blank=True, max_length=40, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('middlename', models.CharField(blank=True, max_length=40, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=40, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('same_as_billing', models.SmallIntegerField()),
                ('free_shipping', models.SmallIntegerField()),
                ('collect_shipping_rates', models.SmallIntegerField()),
                ('shipping_method', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_description', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.DecimalField(decimal_places=4, max_digits=12)),
                ('subtotal', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_subtotal', models.DecimalField(decimal_places=4, max_digits=12)),
                ('subtotal_with_discount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_subtotal_with_discount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_tax_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('shipping_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_shipping_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_grand_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('customer_notes', models.TextField(blank=True, null=True)),
                ('applied_taxes', models.TextField(blank=True, null=True)),
                ('discount_description', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('subtotal_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_subtotal_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_hidden_tax_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_shipping_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('vat_id', models.TextField(blank=True, null=True)),
                ('vat_is_valid', models.SmallIntegerField(blank=True, null=True)),
                ('vat_request_id', models.TextField(blank=True, null=True)),
                ('vat_request_date', models.TextField(blank=True, null=True)),
                ('vat_request_success', models.SmallIntegerField(blank=True, null=True)),
                ('gift_message_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote_address',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuoteAddressItem',
            fields=[
                ('address_item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_item_id', models.IntegerField(blank=True, null=True)),
                ('quote_address_id', models.IntegerField()),
                ('quote_item_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('applied_rule_ids', models.TextField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('row_total_with_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('super_product_id', models.IntegerField(blank=True, null=True)),
                ('parent_product_id', models.IntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('free_shipping', models.IntegerField(blank=True, null=True)),
                ('is_qty_decimal', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('no_discount', models.IntegerField(blank=True, null=True)),
                ('tax_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('gift_message_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote_address_item',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuoteItem',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('quote_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('parent_item_id', models.IntegerField(blank=True, null=True)),
                ('is_virtual', models.SmallIntegerField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('applied_rule_ids', models.TextField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('free_shipping', models.SmallIntegerField()),
                ('is_qty_decimal', models.SmallIntegerField(blank=True, null=True)),
                ('no_discount', models.SmallIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(decimal_places=4, max_digits=12)),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('custom_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_discount_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('row_total_with_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('base_tax_before_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_before_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('original_custom_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('redirect_url', models.CharField(blank=True, max_length=255, null=True)),
                ('base_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_price_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_row_total_incl_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_hidden_tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('gift_message_id', models.IntegerField(blank=True, null=True)),
                ('weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_row_disposition', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied', models.TextField(blank=True, null=True)),
                ('weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weee_tax_applied_row_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_applied_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('base_weee_tax_applied_row_amnt', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote_item',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuoteItemOption',
            fields=[
                ('option_id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('code', models.CharField(max_length=255)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote_item_option',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuotePayment',
            fields=[
                ('payment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('quote_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_type', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_number_enc', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_last4', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_cid_enc', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_exp_month', models.SmallIntegerField(blank=True, null=True)),
                ('cc_exp_year', models.SmallIntegerField(blank=True, null=True)),
                ('cc_ss_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('cc_ss_start_month', models.SmallIntegerField(blank=True, null=True)),
                ('cc_ss_start_year', models.SmallIntegerField(blank=True, null=True)),
                ('po_number', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('cc_ss_issue', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_information', models.TextField(blank=True, null=True)),
                ('paypal_payer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_payer_status', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_correlation_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote_payment',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatQuoteShippingRate',
            fields=[
                ('rate_id', models.IntegerField(primary_key=True, serialize=False)),
                ('address_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('carrier', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier_title', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('method_description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('method_title', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_quote_shipping_rate',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatShipment',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('total_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('email_sent', models.SmallIntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField()),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('shipping_address_id', models.IntegerField(blank=True, null=True)),
                ('billing_address_id', models.IntegerField(blank=True, null=True)),
                ('shipment_status', models.IntegerField(blank=True, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('packages', models.TextField(blank=True, null=True)),
                ('shipping_label', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_shipment',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatShipmentComment',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('is_customer_notified', models.IntegerField(blank=True, null=True)),
                ('is_visible_on_front', models.SmallIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_shipment_comment',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatShipmentGrid',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('total_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('order_id', models.IntegerField()),
                ('shipment_status', models.IntegerField(blank=True, null=True)),
                ('increment_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('order_increment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('order_created_at', models.DateTimeField(blank=True, null=True)),
                ('shipping_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_shipment_grid',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatShipmentItem',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('row_total', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_shipment_item',
            },
        ),
        migrations.CreateModel(
            name='SalesFlatShipmentTrack',
            fields=[
                ('entity_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('weight', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('order_id', models.IntegerField()),
                ('track_number', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier_code', models.CharField(blank=True, max_length=32, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_flat_shipment_track',
            },
        ),
        migrations.CreateModel(
            name='SalesInvoicedAggregated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('orders_count', models.IntegerField()),
                ('orders_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('invoiced_captured', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('invoiced_not_captured', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_invoiced_aggregated',
            },
        ),
        migrations.CreateModel(
            name='SalesInvoicedAggregatedOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(max_length=50)),
                ('orders_count', models.IntegerField()),
                ('orders_invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('invoiced', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('invoiced_captured', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('invoiced_not_captured', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_invoiced_aggregated_order',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderAggregatedCreated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(max_length=50)),
                ('orders_count', models.IntegerField()),
                ('total_qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_qty_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_income_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_revenue_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_profit_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_invoiced_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_canceled_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_paid_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_refunded_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_tax_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_tax_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_shipping_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_shipping_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_discount_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_aggregated_created',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderAggregatedUpdated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(max_length=50)),
                ('orders_count', models.IntegerField()),
                ('total_qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_qty_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_income_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_revenue_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_profit_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_invoiced_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_canceled_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_paid_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_refunded_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_tax_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_tax_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_shipping_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_shipping_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_discount_amount_actual', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_aggregated_updated',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderStatus',
            fields=[
                ('status', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=128)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_status',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderStatusLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=32)),
                ('store_id', models.SmallIntegerField()),
                ('label', models.CharField(max_length=128)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_status_label',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderStatusState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=32)),
                ('state', models.CharField(max_length=32)),
                ('is_default', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_status_state',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderTax',
            fields=[
                ('tax_id', models.IntegerField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField()),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('percent', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('priority', models.IntegerField()),
                ('position', models.IntegerField()),
                ('base_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('process', models.SmallIntegerField()),
                ('base_real_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('hidden', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_tax',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderTaxItem',
            fields=[
                ('tax_item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tax_id', models.IntegerField()),
                ('item_id', models.IntegerField()),
                ('tax_percent', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_order_tax_item',
            },
        ),
        migrations.CreateModel(
            name='SalesPaymentTransaction',
            fields=[
                ('transaction_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField()),
                ('payment_id', models.IntegerField()),
                ('txn_id', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_txn_id', models.CharField(blank=True, max_length=100, null=True)),
                ('txn_type', models.CharField(blank=True, max_length=15, null=True)),
                ('is_closed', models.SmallIntegerField()),
                ('additional_information', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_payment_transaction',
            },
        ),
        migrations.CreateModel(
            name='SalesRecurringProfile',
            fields=[
                ('profile_id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=20)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('method_code', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('reference_id', models.CharField(blank=True, max_length=32, null=True)),
                ('subscriber_name', models.CharField(blank=True, max_length=150, null=True)),
                ('start_datetime', models.DateTimeField()),
                ('internal_reference_id', models.CharField(max_length=42, unique=True)),
                ('schedule_description', models.CharField(max_length=255)),
                ('suspension_threshold', models.SmallIntegerField(blank=True, null=True)),
                ('bill_failed_later', models.SmallIntegerField()),
                ('period_unit', models.CharField(max_length=20)),
                ('period_frequency', models.SmallIntegerField(blank=True, null=True)),
                ('period_max_cycles', models.SmallIntegerField(blank=True, null=True)),
                ('billing_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('trial_period_unit', models.CharField(blank=True, max_length=20, null=True)),
                ('trial_period_frequency', models.SmallIntegerField(blank=True, null=True)),
                ('trial_period_max_cycles', models.SmallIntegerField(blank=True, null=True)),
                ('trial_billing_amount', models.TextField(blank=True, null=True)),
                ('currency_code', models.CharField(max_length=3)),
                ('shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('init_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('init_may_fail', models.SmallIntegerField()),
                ('order_info', models.TextField()),
                ('order_item_info', models.TextField()),
                ('billing_address_info', models.TextField()),
                ('shipping_address_info', models.TextField(blank=True, null=True)),
                ('profile_vendor_info', models.TextField(blank=True, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_recurring_profile',
            },
        ),
        migrations.CreateModel(
            name='SalesRecurringProfileOrder',
            fields=[
                ('link_id', models.IntegerField(primary_key=True, serialize=False)),
                ('profile_id', models.IntegerField()),
                ('order_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sales_recurring_profile_order',
            },
        ),
        migrations.CreateModel(
            name='SalesRefundedAggregated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(max_length=50)),
                ('orders_count', models.IntegerField()),
                ('refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('online_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('offline_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_refunded_aggregated',
            },
        ),
        migrations.CreateModel(
            name='SalesRefundedAggregatedOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('orders_count', models.IntegerField()),
                ('refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('online_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('offline_refunded', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_refunded_aggregated_order',
            },
        ),
        migrations.CreateModel(
            name='Salesrule',
            fields=[
                ('rule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('uses_per_customer', models.IntegerField()),
                ('is_active', models.SmallIntegerField()),
                ('conditions_serialized', models.TextField(blank=True, null=True)),
                ('actions_serialized', models.TextField(blank=True, null=True)),
                ('stop_rules_processing', models.SmallIntegerField()),
                ('is_advanced', models.SmallIntegerField()),
                ('product_ids', models.TextField(blank=True, null=True)),
                ('sort_order', models.IntegerField()),
                ('simple_action', models.CharField(blank=True, max_length=32, null=True)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('discount_step', models.IntegerField()),
                ('simple_free_shipping', models.SmallIntegerField()),
                ('apply_to_shipping', models.SmallIntegerField()),
                ('times_used', models.IntegerField()),
                ('is_rss', models.SmallIntegerField()),
                ('coupon_type', models.SmallIntegerField()),
                ('use_auto_generation', models.SmallIntegerField()),
                ('uses_per_coupon', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule',
            },
        ),
        migrations.CreateModel(
            name='SalesruleCoupon',
            fields=[
                ('coupon_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_id', models.IntegerField()),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('usage_limit', models.IntegerField(blank=True, null=True)),
                ('usage_per_customer', models.IntegerField(blank=True, null=True)),
                ('times_used', models.IntegerField()),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('is_primary', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('type', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_coupon',
            },
        ),
        migrations.CreateModel(
            name='SalesruleCouponUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_id', models.IntegerField()),
                ('customer_id', models.IntegerField()),
                ('times_used', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_coupon_usage',
            },
        ),
        migrations.CreateModel(
            name='SalesruleCustomer',
            fields=[
                ('rule_customer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_id', models.IntegerField()),
                ('customer_id', models.IntegerField()),
                ('times_used', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_customer',
            },
        ),
        migrations.CreateModel(
            name='SalesruleCustomerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.IntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_customer_group',
            },
        ),
        migrations.CreateModel(
            name='SalesruleLabel',
            fields=[
                ('label_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_id', models.IntegerField()),
                ('store_id', models.SmallIntegerField()),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_label',
            },
        ),
        migrations.CreateModel(
            name='SalesruleProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
                ('customer_group_id', models.SmallIntegerField()),
                ('attribute_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_product_attribute',
            },
        ),
        migrations.CreateModel(
            name='SalesruleWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'salesrule_website',
            },
        ),
        migrations.CreateModel(
            name='SalesShippingAggregated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('shipping_description', models.CharField(blank=True, max_length=255, null=True)),
                ('orders_count', models.IntegerField()),
                ('total_shipping', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_shipping_actual', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_shipping_aggregated',
            },
        ),
        migrations.CreateModel(
            name='SalesShippingAggregatedOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, null=True)),
                ('store_id', models.SmallIntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('shipping_description', models.CharField(blank=True, max_length=255, null=True)),
                ('orders_count', models.IntegerField()),
                ('total_shipping', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_shipping_actual', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'sales_shipping_aggregated_order',
            },
        ),
        migrations.CreateModel(
            name='SendfriendLog',
            fields=[
                ('log_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('time', models.IntegerField()),
                ('website_id', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'sendfriend_log',
            },
        ),
    ]
